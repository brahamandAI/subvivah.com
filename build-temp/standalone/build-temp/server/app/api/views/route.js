"use strict";(()=>{var e={};e.id=1798,e.ids=[1798],e.modules={53524:e=>{e.exports=require("@prisma/client")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2517:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>h,originalPathname:()=>y,patchFetch:()=>m,requestAsyncStorage:()=>d,routeModule:()=>u,serverHooks:()=>f,staticGenerationAsyncStorage:()=>w,staticGenerationBailout:()=>v});var a={};t.r(a),t.d(a,{GET:()=>c,POST:()=>p});var i=t(95419),s=t(69108),o=t(99678),n=t(78070),l=t(81494);async function c(e){try{let{searchParams:r}=new URL(e.url),t=r.get("userId"),a=parseInt(r.get("page")||"1"),i=parseInt(r.get("limit")||"20");if(!t)return new n.Z(JSON.stringify({error:"User ID is required"}),{status:400,headers:{"Content-Type":"application/json"}});try{let e=await l._.profileView.findMany({where:{viewedUserId:t},include:{viewer:{select:{firstName:!0,lastName:!0,photos:{where:{isProfile:!0},take:1}}}},orderBy:{viewedAt:"desc"},skip:(a-1)*i,take:i}),r=await l._.profileView.count({where:{viewedUserId:t}});return new n.Z(JSON.stringify({views:e,total:r,page:a,totalPages:Math.ceil(r/i)}),{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("Database error:",e),new n.Z(JSON.stringify({error:"Failed to fetch profile views"}),{status:500,headers:{"Content-Type":"application/json"}})}}catch(e){return console.error("API error:",e),new n.Z(JSON.stringify({error:"Internal server error"}),{status:500,headers:{"Content-Type":"application/json"}})}}async function p(e){try{let{viewerId:r,viewedUserId:t}=await e.json();if(!r||!t)return new n.Z(JSON.stringify({error:"Missing required fields"}),{status:400,headers:{"Content-Type":"application/json"}});try{let e=await l._.membership.findUnique({where:{userId:r}});if(!e||"free"===e.plan)return new n.Z(JSON.stringify({error:"Premium feature not available"}),{status:403,headers:{"Content-Type":"application/json"}});let a=await l._.profileView.create({data:{viewerId:r,viewedUserId:t,viewedAt:new Date},include:{viewer:{select:{firstName:!0,lastName:!0,photos:{where:{isProfile:!0},take:1}}}}});return await l._.notification.create({data:{userId:t,type:"profile_view",message:`Your profile was viewed by ${a.viewer.firstName} ${a.viewer.lastName}`}}),new n.Z(JSON.stringify(a),{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("Database error:",e),new n.Z(JSON.stringify({error:"Failed to record profile view"}),{status:500,headers:{"Content-Type":"application/json"}})}}catch(e){return console.error("API error:",e),new n.Z(JSON.stringify({error:"Internal server error"}),{status:500,headers:{"Content-Type":"application/json"}})}}let u=new i.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/views/route",pathname:"/api/views",filename:"route",bundlePath:"app/api/views/route"},resolvedPagePath:"/home/subvivah/htdocs/subvivah.com/src/app/api/views/route.ts",nextConfigOutput:"standalone",userland:a}),{requestAsyncStorage:d,staticGenerationAsyncStorage:w,serverHooks:f,headerHooks:h,staticGenerationBailout:v}=u,y="/api/views/route";function m(){return(0,o.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:w})}},81494:(e,r,t)=>{t.d(r,{_:()=>i});var a=t(53524);let i=globalThis.prisma??new a.PrismaClient({log:["query","error","warn"],datasources:{db:{url:process.env.DATABASE_URL}}});(async(e=3,r=1e3)=>{for(let t=0;t<e;t++)try{await i.$connect(),console.log("Successfully connected to MongoDB via Prisma");return}catch(a){console.error(`Failed to connect to database (attempt ${t+1}/${e}):`,a),t===e-1&&(console.error("Max retries reached. Exiting process..."),process.exit(1)),console.log(`Retrying in ${r}ms...`),await new Promise(e=>setTimeout(e,r))}})()}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[1638,6206],()=>t(2517));module.exports=a})();