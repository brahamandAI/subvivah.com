"use strict";(()=>{var e={};e.id=1262,e.ids=[1262],e.modules={53524:e=>{e.exports=require("@prisma/client")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27947:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>w,originalPathname:()=>g,patchFetch:()=>b,requestAsyncStorage:()=>h,routeModule:()=>d,serverHooks:()=>y,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>f});var s={};t.r(s),t.d(s,{GET:()=>c,POST:()=>u,PUT:()=>l});var n=t(95419),o=t(69108),a=t(99678),i=t(78070),p=t(81494);async function c(e){try{let{searchParams:r}=new URL(e.url),t=r.get("userId");if(!t)return new i.Z(JSON.stringify({error:"User ID is required"}),{status:400,headers:{"Content-Type":"application/json"}});try{let e=await p._.membership.findUnique({where:{userId:t}});if(!e)return new i.Z(JSON.stringify({error:"Membership not found"}),{status:404,headers:{"Content-Type":"application/json"}});return new i.Z(JSON.stringify(e),{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("Database error:",e),new i.Z(JSON.stringify({error:"Failed to fetch membership"}),{status:500,headers:{"Content-Type":"application/json"}})}}catch(e){return console.error("API error:",e),new i.Z(JSON.stringify({error:"Internal server error"}),{status:500,headers:{"Content-Type":"application/json"}})}}async function u(e){try{let{userId:r,plan:t,duration:s,paymentStatus:n}=await e.json();if(!r||!t||!s||!n)return new i.Z(JSON.stringify({error:"Missing required fields"}),{status:400,headers:{"Content-Type":"application/json"}});let o=new Date,a=new Date;a.setMonth(a.getMonth()+s);let c={basic:["View profiles","Send interests"],premium:["View profiles","Send interests","View contact details","Priority customer support"],platinum:["View profiles","Send interests","View contact details","Priority customer support","Advanced search","Profile boost"]}[t]||[];try{let e=await p._.membership.upsert({where:{userId:r},update:{plan:t,duration:s,paymentStatus:n,startDate:o,endDate:a,features:c,isActive:"completed"===n},create:{userId:r,plan:t,duration:s,paymentStatus:n,startDate:o,endDate:a,features:c,isActive:"completed"===n}});return new i.Z(JSON.stringify(e),{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("Database error:",e),new i.Z(JSON.stringify({error:"Failed to save membership"}),{status:500,headers:{"Content-Type":"application/json"}})}}catch(e){return console.error("API error:",e),new i.Z(JSON.stringify({error:"Internal server error"}),{status:500,headers:{"Content-Type":"application/json"}})}}async function l(e){try{let{id:r,...t}=await e.json(),s=await p._.membership.update({where:{id:r},data:t});return i.Z.json(s)}catch(e){return i.Z.json({error:"Internal server error"},{status:500})}}let d=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/membership/route",pathname:"/api/membership",filename:"route",bundlePath:"app/api/membership/route"},resolvedPagePath:"/home/subvivah/htdocs/subvivah.com/src/app/api/membership/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:h,staticGenerationAsyncStorage:m,serverHooks:y,headerHooks:w,staticGenerationBailout:f}=d,g="/api/membership/route";function b(){return(0,a.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:m})}},81494:(e,r,t)=>{t.d(r,{_:()=>n});var s=t(53524);let n=globalThis.prisma??new s.PrismaClient({log:["query","error","warn"],datasources:{db:{url:process.env.DATABASE_URL}}});(async(e=3,r=1e3)=>{for(let t=0;t<e;t++)try{await n.$connect(),console.log("Successfully connected to MongoDB via Prisma");return}catch(s){console.error(`Failed to connect to database (attempt ${t+1}/${e}):`,s),t===e-1&&(console.error("Max retries reached. Exiting process..."),process.exit(1)),console.log(`Retrying in ${r}ms...`),await new Promise(e=>setTimeout(e,r))}})()}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[1638,6206],()=>t(27947));module.exports=s})();