"use strict";(()=>{var e={};e.id=2329,e.ids=[2329],e.modules={53524:e=>{e.exports=require("@prisma/client")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},88340:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>h,originalPathname:()=>v,patchFetch:()=>f,requestAsyncStorage:()=>p,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>d,staticGenerationBailout:()=>g});var o={};r.r(o),r.d(o,{GET:()=>u});var a=r(95419),s=r(69108),n=r(99678),i=r(78070),c=r(81494);async function u(){try{return await c._.$connect(),i.Z.json({status:"success",message:"Database connection successful"})}catch(e){return console.error("Database connection error:",e),i.Z.json({status:"error",message:"Database connection failed",error:e instanceof Error?e.message:"Unknown error"},{status:500})}finally{await c._.$disconnect()}}let l=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/test/route",pathname:"/api/test",filename:"route",bundlePath:"app/api/test/route"},resolvedPagePath:"/home/subvivah/htdocs/subvivah.com/src/app/api/test/route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:p,staticGenerationAsyncStorage:d,serverHooks:m,headerHooks:h,staticGenerationBailout:g}=l,v="/api/test/route";function f(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:d})}},81494:(e,t,r)=>{r.d(t,{_:()=>a});var o=r(53524);let a=globalThis.prisma??new o.PrismaClient({log:["query","error","warn"],datasources:{db:{url:process.env.DATABASE_URL}}});(async(e=3,t=1e3)=>{for(let r=0;r<e;r++)try{await a.$connect(),console.log("Successfully connected to MongoDB via Prisma");return}catch(o){console.error(`Failed to connect to database (attempt ${r+1}/${e}):`,o),r===e-1&&(console.error("Max retries reached. Exiting process..."),process.exit(1)),console.log(`Retrying in ${t}ms...`),await new Promise(e=>setTimeout(e,t))}})()}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[1638,6206],()=>r(88340));module.exports=o})();