"use strict";(()=>{var e={};e.id=6525,e.ids=[6525],e.modules={53524:e=>{e.exports=require("@prisma/client")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},12781:e=>{e.exports=require("stream")},73837:e=>{e.exports=require("util")},84110:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>g,originalPathname:()=>y,patchFetch:()=>x,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>v,staticGenerationAsyncStorage:()=>h,staticGenerationBailout:()=>f});var s={};t.r(s),t.d(s,{GET:()=>l,dynamic:()=>d});var o=t(95419),a=t(69108),n=t(99678),i=t(78070),c=t(81494),u=t(46082);let d="force-dynamic";async function l(e){try{let r;let t=(e.headers.get("cookie")||"").match(/token=([^;]+)/),s=t?t[1]:null;if(!s)return i.Z.json({error:"Not authenticated"},{status:401});try{r=(0,u.verify)(s,process.env.JWT_SECRET||"your-secret-key")}catch{return i.Z.json({error:"Invalid token"},{status:401})}let o=await c._.message.findMany({where:{OR:[{senderId:r.userId},{receiverId:r.userId}]},orderBy:{createdAt:"desc"},include:{sender:{select:{firstName:!0,lastName:!0,photos:{where:{isProfile:!0},take:1}}},receiver:{select:{firstName:!0,lastName:!0,photos:{where:{isProfile:!0},take:1}}}}}),a=new Map;o.forEach(e=>{let t=e.senderId===r.userId?e.receiverId:e.senderId,s=e.senderId===r.userId?e.receiver:e.sender;a.has(t)||a.set(t,{id:t,firstName:s.firstName,lastName:s.lastName,photo:s.photos[0]?.url||null,lastMessage:e.content,lastMessageTime:e.createdAt,unreadCount:0}),!e.isRead&&e.receiverId===r.userId&&a.get(t).unreadCount++});let n=Array.from(a.values());return i.Z.json({conversations:n})}catch(e){return console.error("Error fetching conversations:",e),i.Z.json({error:"Failed to fetch conversations"},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/messages/conversations/route",pathname:"/api/messages/conversations",filename:"route",bundlePath:"app/api/messages/conversations/route"},resolvedPagePath:"/home/subvivah/htdocs/subvivah.com/src/app/api/messages/conversations/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:h,serverHooks:v,headerHooks:g,staticGenerationBailout:f}=p,y="/api/messages/conversations/route";function x(){return(0,n.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:h})}},81494:(e,r,t)=>{t.d(r,{_:()=>o});var s=t(53524);let o=globalThis.prisma??new s.PrismaClient({log:["query","error","warn"],datasources:{db:{url:process.env.DATABASE_URL}}});(async(e=3,r=1e3)=>{for(let t=0;t<e;t++)try{await o.$connect(),console.log("Successfully connected to MongoDB via Prisma");return}catch(s){console.error(`Failed to connect to database (attempt ${t+1}/${e}):`,s),t===e-1&&(console.error("Max retries reached. Exiting process..."),process.exit(1)),console.log(`Retrying in ${r}ms...`),await new Promise(e=>setTimeout(e,r))}})()}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[1638,6206,6082],()=>t(84110));module.exports=s})();