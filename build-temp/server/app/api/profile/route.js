"use strict";(()=>{var e={};e.id=442,e.ids=[442],e.modules={53524:e=>{e.exports=require("@prisma/client")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},48976:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>v,originalPathname:()=>g,patchFetch:()=>y,requestAsyncStorage:()=>f,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>h,staticGenerationBailout:()=>w});var o={};t.r(o),t.d(o,{GET:()=>c,POST:()=>l,PUT:()=>p});var a=t(95419),n=t(69108),s=t(99678),i=t(78070),u=t(81494);async function c(e){try{let{searchParams:r}=new URL(e.url),t=r.get("userId");if(!t)return i.Z.json({error:"User ID is required"},{status:400});let o=await u._.profile.findUnique({where:{userId:t},include:{user:{include:{horoscope:!0,preferences:!0,photos:!0}}}});if(!o)return i.Z.json({error:"Profile not found"},{status:404});return i.Z.json(o)}catch(e){return i.Z.json({error:"Internal server error"},{status:500})}}async function l(e){try{let{userId:r,...t}=await e.json(),o=await u._.profile.create({data:{userId:r,...t}});return i.Z.json(o)}catch(e){return i.Z.json({error:"Internal server error"},{status:500})}}async function p(e){try{let{userId:r,...t}=await e.json(),o=await u._.profile.update({where:{userId:r},data:t});return i.Z.json(o)}catch(e){return i.Z.json({error:"Internal server error"},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/profile/route",pathname:"/api/profile",filename:"route",bundlePath:"app/api/profile/route"},resolvedPagePath:"/home/subvivah/htdocs/subvivah.com/src/app/api/profile/route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:f,staticGenerationAsyncStorage:h,serverHooks:m,headerHooks:v,staticGenerationBailout:w}=d,g="/api/profile/route";function y(){return(0,s.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:h})}},81494:(e,r,t)=>{t.d(r,{_:()=>a});var o=t(53524);let a=globalThis.prisma??new o.PrismaClient({log:["query","error","warn"],datasources:{db:{url:process.env.DATABASE_URL}}});(async(e=3,r=1e3)=>{for(let t=0;t<e;t++)try{await a.$connect(),console.log("Successfully connected to MongoDB via Prisma");return}catch(o){console.error(`Failed to connect to database (attempt ${t+1}/${e}):`,o),t===e-1&&(console.error("Max retries reached. Exiting process..."),process.exit(1)),console.log(`Retrying in ${r}ms...`),await new Promise(e=>setTimeout(e,r))}})()}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[1638,6206],()=>t(48976));module.exports=o})();