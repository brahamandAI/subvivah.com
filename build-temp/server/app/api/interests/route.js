"use strict";(()=>{var e={};e.id=3984,e.ids=[3984],e.modules={53524:e=>{e.exports=require("@prisma/client")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},48911:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>m,originalPathname:()=>g,patchFetch:()=>N,requestAsyncStorage:()=>h,routeModule:()=>u,serverHooks:()=>f,staticGenerationAsyncStorage:()=>y,staticGenerationBailout:()=>w});var s={};t.r(s),t.d(s,{GET:()=>l,POST:()=>d,PUT:()=>p});var a=t(95419),n=t(69108),i=t(99678),o=t(78070),c=t(81494);async function l(e){try{let{searchParams:r}=new URL(e.url),t=r.get("userId"),s=r.get("type")||"received";if(!t)return new o.Z(JSON.stringify({error:"User ID is required"}),{status:400,headers:{"Content-Type":"application/json"}});try{let e=await c._.interest.findMany({where:"sent"===s?{senderId:t}:{receiverId:t},include:{sender:{select:{firstName:!0,lastName:!0,email:!0,photos:{where:{isProfile:!0},take:1}}},receiver:{select:{firstName:!0,lastName:!0,email:!0,photos:{where:{isProfile:!0},take:1}}}},orderBy:{createdAt:"desc"}});return new o.Z(JSON.stringify(e),{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("Database error:",e),new o.Z(JSON.stringify({error:"Failed to fetch interests"}),{status:500,headers:{"Content-Type":"application/json"}})}}catch(e){return console.error("API error:",e),new o.Z(JSON.stringify({error:"Internal server error"}),{status:500,headers:{"Content-Type":"application/json"}})}}async function d(e){try{let{senderId:r,receiverId:t}=await e.json();if(!r||!t)return new o.Z(JSON.stringify({error:"Sender ID and Receiver ID are required"}),{status:400,headers:{"Content-Type":"application/json"}});try{if(await c._.interest.findUnique({where:{senderId_receiverId:{senderId:r,receiverId:t}}}))return new o.Z(JSON.stringify({error:"Interest already sent"}),{status:400,headers:{"Content-Type":"application/json"}});let e=await c._.interest.create({data:{senderId:r,receiverId:t,status:"pending"},include:{sender:{select:{firstName:!0,lastName:!0,email:!0,photos:{where:{isProfile:!0},take:1}}},receiver:{select:{firstName:!0,lastName:!0,email:!0,photos:{where:{isProfile:!0},take:1}}}}});return await c._.notification.create({data:{userId:t,type:"interest",message:`New interest received from ${e.sender.firstName} ${e.sender.lastName}`}}),new o.Z(JSON.stringify(e),{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("Database error:",e),new o.Z(JSON.stringify({error:"Failed to send interest"}),{status:500,headers:{"Content-Type":"application/json"}})}}catch(e){return console.error("API error:",e),new o.Z(JSON.stringify({error:"Internal server error"}),{status:500,headers:{"Content-Type":"application/json"}})}}async function p(e){try{let{interestId:r,status:t}=await e.json();if(!r||!t)return new o.Z(JSON.stringify({error:"Interest ID and status are required"}),{status:400,headers:{"Content-Type":"application/json"}});try{let e=await c._.interest.update({where:{id:r},data:{status:t},include:{sender:{select:{firstName:!0,lastName:!0,email:!0,photos:{where:{isProfile:!0},take:1}}},receiver:{select:{firstName:!0,lastName:!0,email:!0,photos:{where:{isProfile:!0},take:1}}}}});return await c._.notification.create({data:{userId:e.senderId,type:"interest",message:`Your interest has been ${t} by ${e.receiver.firstName} ${e.receiver.lastName}`}}),new o.Z(JSON.stringify(e),{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("Database error:",e),new o.Z(JSON.stringify({error:"Failed to update interest"}),{status:500,headers:{"Content-Type":"application/json"}})}}catch(e){return console.error("API error:",e),new o.Z(JSON.stringify({error:"Internal server error"}),{status:500,headers:{"Content-Type":"application/json"}})}}let u=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/interests/route",pathname:"/api/interests",filename:"route",bundlePath:"app/api/interests/route"},resolvedPagePath:"/home/subvivah/htdocs/subvivah.com/src/app/api/interests/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:h,staticGenerationAsyncStorage:y,serverHooks:f,headerHooks:m,staticGenerationBailout:w}=u,g="/api/interests/route";function N(){return(0,i.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:y})}},81494:(e,r,t)=>{t.d(r,{_:()=>a});var s=t(53524);let a=globalThis.prisma??new s.PrismaClient({log:["query","error","warn"],datasources:{db:{url:process.env.DATABASE_URL}}});(async(e=3,r=1e3)=>{for(let t=0;t<e;t++)try{await a.$connect(),console.log("Successfully connected to MongoDB via Prisma");return}catch(s){console.error(`Failed to connect to database (attempt ${t+1}/${e}):`,s),t===e-1&&(console.error("Max retries reached. Exiting process..."),process.exit(1)),console.log(`Retrying in ${r}ms...`),await new Promise(e=>setTimeout(e,r))}})()}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[1638,6206],()=>t(48911));module.exports=s})();