"use strict";(()=>{var e={};e.id=7812,e.ids=[7812],e.modules={53524:e=>{e.exports=require("@prisma/client")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14628:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>w,originalPathname:()=>m,patchFetch:()=>v,requestAsyncStorage:()=>h,routeModule:()=>p,serverHooks:()=>f,staticGenerationAsyncStorage:()=>y,staticGenerationBailout:()=>g});var s={};t.r(s),t.d(s,{DELETE:()=>d,GET:()=>c,POST:()=>u});var o=t(95419),a=t(69108),n=t(99678),i=t(78070),l=t(81494);async function c(e){try{let{searchParams:r}=new URL(e.url),t=r.get("userId");if(!t)return new i.Z(JSON.stringify({error:"User ID is required"}),{status:400,headers:{"Content-Type":"application/json"}});try{let e=await l._.shortlist.findMany({where:{userId:t},include:{shortlistedUser:{select:{firstName:!0,lastName:!0,email:!0,photos:{where:{isProfile:!0},take:1},profile:!0}}},orderBy:{createdAt:"desc"}});return new i.Z(JSON.stringify(e),{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("Database error:",e),new i.Z(JSON.stringify({error:"Failed to fetch shortlisted profiles"}),{status:500,headers:{"Content-Type":"application/json"}})}}catch(e){return console.error("API error:",e),new i.Z(JSON.stringify({error:"Internal server error"}),{status:500,headers:{"Content-Type":"application/json"}})}}async function u(e){try{let{userId:r,shortlistedUserId:t}=await e.json();if(!r||!t)return new i.Z(JSON.stringify({error:"User ID and Shortlisted User ID are required"}),{status:400,headers:{"Content-Type":"application/json"}});try{if(await l._.shortlist.findUnique({where:{userId_shortlistedUserId:{userId:r,shortlistedUserId:t}}}))return new i.Z(JSON.stringify({error:"Profile already shortlisted"}),{status:400,headers:{"Content-Type":"application/json"}});let e=await l._.shortlist.create({data:{userId:r,shortlistedUserId:t},include:{shortlistedUser:{select:{firstName:!0,lastName:!0,email:!0,photos:{where:{isProfile:!0},take:1},profile:!0}}}});return await l._.notification.create({data:{userId:t,type:"shortlist",message:`You have been shortlisted by ${e.shortlistedUser.firstName} ${e.shortlistedUser.lastName}`}}),new i.Z(JSON.stringify(e),{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("Database error:",e),new i.Z(JSON.stringify({error:"Failed to shortlist profile"}),{status:500,headers:{"Content-Type":"application/json"}})}}catch(e){return console.error("API error:",e),new i.Z(JSON.stringify({error:"Internal server error"}),{status:500,headers:{"Content-Type":"application/json"}})}}async function d(e){try{let{searchParams:r}=new URL(e.url),t=r.get("userId"),s=r.get("shortlistedUserId");if(!t||!s)return new i.Z(JSON.stringify({error:"User ID and Shortlisted User ID are required"}),{status:400,headers:{"Content-Type":"application/json"}});try{return await l._.shortlist.delete({where:{userId_shortlistedUserId:{userId:t,shortlistedUserId:s}}}),new i.Z(JSON.stringify({success:!0}),{status:200,headers:{"Content-Type":"application/json"}})}catch(e){return console.error("Database error:",e),new i.Z(JSON.stringify({error:"Failed to remove from shortlist"}),{status:500,headers:{"Content-Type":"application/json"}})}}catch(e){return console.error("API error:",e),new i.Z(JSON.stringify({error:"Internal server error"}),{status:500,headers:{"Content-Type":"application/json"}})}}let p=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/shortlist/route",pathname:"/api/shortlist",filename:"route",bundlePath:"app/api/shortlist/route"},resolvedPagePath:"/home/subvivah/htdocs/subvivah.com/src/app/api/shortlist/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:h,staticGenerationAsyncStorage:y,serverHooks:f,headerHooks:w,staticGenerationBailout:g}=p,m="/api/shortlist/route";function v(){return(0,n.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:y})}},81494:(e,r,t)=>{t.d(r,{_:()=>o});var s=t(53524);let o=globalThis.prisma??new s.PrismaClient({log:["query","error","warn"],datasources:{db:{url:process.env.DATABASE_URL}}});(async(e=3,r=1e3)=>{for(let t=0;t<e;t++)try{await o.$connect(),console.log("Successfully connected to MongoDB via Prisma");return}catch(s){console.error(`Failed to connect to database (attempt ${t+1}/${e}):`,s),t===e-1&&(console.error("Max retries reached. Exiting process..."),process.exit(1)),console.log(`Retrying in ${r}ms...`),await new Promise(e=>setTimeout(e,r))}})()}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[1638,6206],()=>t(14628));module.exports=s})();