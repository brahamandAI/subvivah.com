"use strict";(()=>{var r={};r.id=6432,r.ids=[6432],r.modules={53524:r=>{r.exports=require("@prisma/client")},30517:r=>{r.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},45208:(r,e,t)=>{t.r(e),t.d(e,{headerHooks:()=>m,originalPathname:()=>w,patchFetch:()=>P,requestAsyncStorage:()=>h,routeModule:()=>p,serverHooks:()=>f,staticGenerationAsyncStorage:()=>y,staticGenerationBailout:()=>v});var o={};t.r(o),t.d(o,{DELETE:()=>d,GET:()=>c,POST:()=>l});var s=t(95419),a=t(69108),n=t(99678),i=t(78070),u=t(81494);async function c(r){try{let{searchParams:e}=new URL(r.url),t=e.get("userId");if(!t)return i.Z.json({error:"User ID is required"},{status:400});try{let r=await u._.photo.findMany({where:{userId:t},orderBy:{createdAt:"desc"}});return i.Z.json(r)}catch(r){return console.error("Database error:",r),i.Z.json({error:"Failed to fetch photos"},{status:500})}}catch(r){return console.error("API error:",r),i.Z.json({error:"Internal server error"},{status:500})}}async function l(r){try{let{userId:e,url:t,isProfile:o}=await r.json();if(!e||!t)return i.Z.json({error:"Missing required fields"},{status:400});try{o&&await u._.photo.updateMany({where:{userId:e,isProfile:!0},data:{isProfile:!1}});let r=await u._.photo.create({data:{userId:e,url:t,isProfile:o||!1}});return i.Z.json(r)}catch(r){return console.error("Database error:",r),i.Z.json({error:"Failed to upload photo"},{status:500})}}catch(r){return console.error("API error:",r),i.Z.json({error:"Internal server error"},{status:500})}}async function d(r){try{let{searchParams:e}=new URL(r.url),t=e.get("photoId");if(!t)return i.Z.json({error:"Photo ID is required"},{status:400});try{return await u._.photo.delete({where:{id:t}}),i.Z.json({success:!0})}catch(r){return console.error("Database error:",r),i.Z.json({error:"Failed to delete photo"},{status:500})}}catch(r){return console.error("API error:",r),i.Z.json({error:"Internal server error"},{status:500})}}let p=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/photos/route",pathname:"/api/photos",filename:"route",bundlePath:"app/api/photos/route"},resolvedPagePath:"/home/subvivah/htdocs/subvivah.com/src/app/api/photos/route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:h,staticGenerationAsyncStorage:y,serverHooks:f,headerHooks:m,staticGenerationBailout:v}=p,w="/api/photos/route";function P(){return(0,n.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:y})}},81494:(r,e,t)=>{t.d(e,{_:()=>s});var o=t(53524);let s=globalThis.prisma??new o.PrismaClient({log:["query","error","warn"],datasources:{db:{url:process.env.DATABASE_URL}}});(async(r=3,e=1e3)=>{for(let t=0;t<r;t++)try{await s.$connect(),console.log("Successfully connected to MongoDB via Prisma");return}catch(o){console.error(`Failed to connect to database (attempt ${t+1}/${r}):`,o),t===r-1&&(console.error("Max retries reached. Exiting process..."),process.exit(1)),console.log(`Retrying in ${e}ms...`),await new Promise(r=>setTimeout(r,e))}})()}};var e=require("../../../webpack-runtime.js");e.C(r);var t=r=>e(e.s=r),o=e.X(0,[1638,6206],()=>t(45208));module.exports=o})();