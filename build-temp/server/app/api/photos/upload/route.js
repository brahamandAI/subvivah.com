"use strict";(()=>{var e={};e.id=8246,e.ids=[8246],e.modules={53524:e=>{e.exports=require("@prisma/client")},46517:e=>{e.exports=require("lodash")},59283:e=>{e.exports=require("lodash/at")},20770:e=>{e.exports=require("lodash/clone")},39131:e=>{e.exports=require("lodash/compact")},48390:e=>{e.exports=require("lodash/extend")},9368:e=>{e.exports=require("lodash/filter")},22265:e=>{e.exports=require("lodash/first")},41238:e=>{e.exports=require("lodash/includes")},35599:e=>{e.exports=require("lodash/isArray")},89699:e=>{e.exports=require("lodash/isEmpty")},25716:e=>{e.exports=require("lodash/isFunction")},27078:e=>{e.exports=require("lodash/isNumber")},75795:e=>{e.exports=require("lodash/isObject")},15452:e=>{e.exports=require("lodash/isPlainObject")},20992:e=>{e.exports=require("lodash/isString")},22133:e=>{e.exports=require("lodash/isUndefined")},83824:e=>{e.exports=require("lodash/last")},53707:e=>{e.exports=require("lodash/map")},11516:e=>{e.exports=require("lodash/take")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},57147:e=>{e.exports=require("fs")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},71017:e=>{e.exports=require("path")},63477:e=>{e.exports=require("querystring")},12781:e=>{e.exports=require("stream")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},21645:(e,r,o)=>{o.r(r),o.d(r,{headerHooks:()=>q,originalPathname:()=>g,patchFetch:()=>v,requestAsyncStorage:()=>h,routeModule:()=>c,serverHooks:()=>x,staticGenerationAsyncStorage:()=>f,staticGenerationBailout:()=>m});var t={};o.r(t),o.d(t,{POST:()=>d});var s=o(95419),a=o(69108),i=o(99678),u=o(78070),n=o(81494),p=o(46082),l=o(76386);async function d(e){try{let r;let o=(e.headers.get("cookie")||"").match(/token=([^;]+)/),t=o?o[1]:null;if(!t)return u.Z.json({error:"Not authenticated"},{status:401});try{r=(0,p.verify)(t,process.env.JWT_SECRET||"your-secret-key")}catch{return u.Z.json({error:"Invalid token"},{status:401})}let s=await e.formData(),a=s.get("file"),i="true"===s.get("isProfile");if(!a)return u.Z.json({error:"No file provided"},{status:400});if(!a.type.startsWith("image/"))return u.Z.json({error:"File must be an image"},{status:400});if(a.size>5242880)return u.Z.json({error:"File size must be less than 5MB"},{status:400});if(!await n._.profile.findUnique({where:{userId:r.userId}}))return u.Z.json({error:"Profile not found"},{status:404});try{let e=await a.arrayBuffer(),o=Buffer.from(e).toString("base64"),t=`data:${a.type};base64,${o}`,{secure_url:s}=await new Promise((e,r)=>{l.v2.uploader.upload(t,{folder:"subvivah/profiles",resource_type:"auto",transformation:[{width:1e3,height:1e3,crop:"limit"},{quality:"auto"}]},(o,t)=>{o?r(o):e(t)})}),p=await n._.photo.create({data:{url:s,isProfile:i,isVerified:!1,userId:r.userId}});return i&&await n._.photo.updateMany({where:{userId:r.userId,id:{not:p.id}},data:{isProfile:!1}}),u.Z.json(p)}catch(e){return console.error("Error during upload process:",e),u.Z.json({error:"Failed to upload photo",details:e instanceof Error?e.message:"Unknown upload error"},{status:500})}}catch(e){return console.error("Error in photo upload API:",e),u.Z.json({error:"Failed to process photo upload",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}l.v2.config({cloud_name:process.env.CLOUDINARY_CLOUD_NAME,api_key:process.env.CLOUDINARY_API_KEY,api_secret:process.env.CLOUDINARY_API_SECRET});let c=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/photos/upload/route",pathname:"/api/photos/upload",filename:"route",bundlePath:"app/api/photos/upload/route"},resolvedPagePath:"/home/subvivah/htdocs/subvivah.com/src/app/api/photos/upload/route.ts",nextConfigOutput:"standalone",userland:t}),{requestAsyncStorage:h,staticGenerationAsyncStorage:f,serverHooks:x,headerHooks:q,staticGenerationBailout:m}=c,g="/api/photos/upload/route";function v(){return(0,i.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:f})}},81494:(e,r,o)=>{o.d(r,{_:()=>s});var t=o(53524);let s=globalThis.prisma??new t.PrismaClient({log:["query","error","warn"],datasources:{db:{url:process.env.DATABASE_URL}}});(async(e=3,r=1e3)=>{for(let o=0;o<e;o++)try{await s.$connect(),console.log("Successfully connected to MongoDB via Prisma");return}catch(t){console.error(`Failed to connect to database (attempt ${o+1}/${e}):`,t),o===e-1&&(console.error("Max retries reached. Exiting process..."),process.exit(1)),console.log(`Retrying in ${r}ms...`),await new Promise(e=>setTimeout(e,r))}})()}};var r=require("../../../../webpack-runtime.js");r.C(e);var o=e=>r(r.s=e),t=r.X(0,[1638,6206,6082,6386],()=>o(21645));module.exports=t})();